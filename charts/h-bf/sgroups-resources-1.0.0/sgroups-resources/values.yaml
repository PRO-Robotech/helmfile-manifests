globalVolumeconfigurationClientFile: &globalVolumeconfigurationClientFile "/opt/h-bf/sgroups/client/config.yaml"
globalVolumeCertificate:             &globalVolumeCertificate             "/opt/h-bf/sgroups/tls"

appSpec:
  applications:
    sgroupsresources:
      enabled: true
      type: Deployment
      name: sgroupsresources
      replicas: 1

      tolerations:
        - key: node-role.kubernetes.io/data-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/b-cloud-infra
          effect: NoSchedule

      extraPriorityClassName: system-cluster-critical

      volumes:
        certificate:
          volume:
            mode: secret
            name: sgroupsresources-certificate
        configurationClientFile:
          volume:
            mode: configMap
            name: client-config
            payload:
              format: json
              content:
                app:
                  name: 'sgroups-k8s-network-policy'
                  version: '1.0.2'
                settings:
                  sgroup-grpc-address: "sgroups-server.incloud-sgroups.svc:9006"
                authn:
                  type: tls
                  tls:
                    key-file: "/opt/h-bf/sgroups/tls/tls.key"
                    cert-file: "/opt/h-bf/sgroups/tls/tls.crt"
                    client:
                      verify: skip
                      ca-files:
                        - "/opt/h-bf/sgroups/tls/ca.crt"
                logger:
                  log-level: "DEBUG"

      containers:
        manager:
          name: manager
          enabled: true
          image:
            repository: sgroups/sgroups.k8s.network-policy
            tag: 2-tls-config-55626cf5

          extraCommand:
            - /manager

          extraArgs:
            health-probe-bind-address: ":8081"
            leader-elect: true
            metrics-bind-address: 127.0.0.1:8080
            config: *globalVolumeconfigurationClientFile

          extraPorts:
            metrics:
              containerPort: 8080
              protocol: TCP

          extraResources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi

          extraLivenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20

          extraReadinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10

          extraVolumeMounts:
            certificate:
              volumeMount:
                path: *globalVolumeCertificate
            configurationClientFile:
              volumeMount:
                path: *globalVolumeconfigurationClientFile
                spec:
                  subPath: client-config
