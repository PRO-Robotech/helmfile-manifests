{{- $mainDomain := .Values.global.domains.internal -}}
{{- $clusterFullName := .Values.global.clusterFullName -}}
{{- $hbfDomain  := printf "%s.%s.%s" .Release.Name .Release.Namespace $mainDomain }}

domain: {{ $mainDomain }}

appSpec:
  applications:
    server:
      containers:
        server:
          extraEnv:
            dbUser:     {{ .Values.global.sgroups.externalDB.dbUser }}
            dbPassword: {{ .Values.global.sgroups.externalDB.dbPassword }}
            dbUrl:      {{ .Values.global.sgroups.externalDB.dbUrl }}
            dbPort:     {{ .Values.global.sgroups.externalDB.dbPort }}
            dbName:     {{ .Values.global.sgroups.externalDB.dbName }}

      initContainers:
        migration:
          extraEnv:
            dbUser:     {{ .Values.global.sgroups.externalDB.dbUser }}
            dbPassword: {{ .Values.global.sgroups.externalDB.dbPassword }}
            dbUrl:      {{ .Values.global.sgroups.externalDB.dbUrl }}
            dbPort:     {{ .Values.global.sgroups.externalDB.dbPort }}
            dbName:     {{ .Values.global.sgroups.externalDB.dbName }}

    web:
      containers:
        web:
          extraEnv:
            HBF_API: https://{{ $hbfDomain }}/server

helm-inserter:
  templates:
    APIServiceCert: |
      ---
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: {{ $.Release.Name }}-apisvcgateway
        namespace: {{ $.Release.Namespace }}
      spec:
        commonName: {{ .Release.Name }}-istio-apisvcgateway
        dnsNames:
          - {{ .Release.Name }}-istio-apisvcgateway
          - {{ .Release.Name }}-istio-apisvcgateway.{{ $.Release.Namespace }}
          - {{ .Release.Name }}-istio-apisvcgateway.{{ $.Release.Namespace }}.svc
        issuerRef:
          group: cert-manager.io
          kind: Issuer
          name: {{ $.Release.Name }}
        usages:
          - server auth
        secretName: {{ $.Release.Name }}-apisvcgateway

    APIServiceGW: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: apisvc-gateway
        namespace: {{ $.Release.Namespace }}
      spec:
        selector:
          istio: {{ .Release.Name }}-istio-apisvcgateway
        servers:
          - port:
              number: 443
              name: https
              protocol: HTTPS
            hosts:
              - "*"
            tls:
              mode: SIMPLE
              credentialName: {{ $.Release.Name }}-apisvcgateway

    APIServiceVS: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: apisvc-vsvc
        namespace: {{ $.Release.Namespace }}
      spec:
        hosts:
          - "*"
        gateways:
          - apisvc-gateway
        http:
          - name: hbf.v2.sgroups.SecGroupService
            match:
              - uri:
                  prefix: /apis/proxy.sgroups.io/v1alpha1/hbf.v2.sgroups.SecGroupService
            rewrite:
              uri: /hbf.v2.sgroups.SecGroupService
            route:
              - destination:
                  host: {{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc
                  port:
                    number: 9006
          - name: sgroups
            match:
              - uri:
                  prefix: /apis/proxy.sgroups.io/v1alpha1/
            rewrite:
              uri: /
            route:
              - destination:
                  host: {{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc
                  port:
                    number: 9006
          - match:
            - uri:
                prefix: /openapi/v2
              method:
                exact: GET
            headers:
              response:
                set:
                  Content-Type: "application/json"
            directResponse:
              status: 200
              body:
                string: |
                  {
                    "swagger": "2.0",
                    "info": {
                      "title": "proxy.sgroups.io/v1alpha1",
                      "version": "v1alpha1"
                    },
                    "paths": {
                      "/apis/proxy.sgroups.io/v1alpha1/": {
                        "get": {
                          "description": "List available resources",
                          "responses": {
                            "200": {
                              "description": "OK",
                              "schema": {
                                "$ref": "#/definitions/v1alpha1.APIResourceList"
                              }
                            }
                          }
                        }
                      }
                    },
                    "definitions": {
                      "v1alpha1.APIResourceList": {
                        "type": "object",
                        "required": ["apiVersion", "kind", "groupVersion", "resources"],
                        "properties": {
                          "apiVersion": {"type": "string"},
                          "kind": {"type": "string"},
                          "groupVersion": {"type": "string"},
                          "resources": {
                            "type": "array",
                            "items": {"$ref": "#/definitions/v1alpha1.APIResource"}
                          }
                        }
                      },
                      "v1alpha1.APIResource": {
                        "type": "object",
                        "required": ["name", "kind", "verbs"],
                        "properties": {
                          "name": {"type": "string"},
                          "singularName": {"type": "string"},
                          "namespaced": {"type": "boolean"},
                          "kind": {"type": "string"},
                          "verbs": {
                            "type": "array",
                            "items": {"type": "string"}
                          },
                          "shortNames": {
                            "type": "array",
                            "items": {"type": "string"}
                          }
                        }
                      }
                    }
                  }

          - match:
            - uri:
                prefix: /apis/proxy.sgroups.io/v1alpha1
              method:
                exact: GET
            headers:
              response:
                set:
                  Content-Type: "application/json"
            directResponse:
              status: 200
              body:
                string: |
                  {
                    "kind": "APIResourceList",
                    "apiVersion": "v1alpha1",
                    "groupVersion": "sgroups.io/v1alpha1",
                    "resources": [
                      {
                        "name": "rules-s2c-ie",
                        "singularName": "rules-s2c-ie",
                        "namespaced": true,
                        "kind": "rules-s2c-ie",
                        "verbs": [
                          "delete",
                          "deletecollection",
                          "get",
                          "list",
                          "create"
                        ]
                      },
                      {
                        "name": "sync",
                        "singularName": "sync",
                        "namespaced": true,
                        "kind": "sync",
                        "verbs": [
                          "delete",
                          "deletecollection",
                          "get",
                          "list",
                          "create"
                        ]
                      }
                    ]
                  }

          - name: sg-grpc
            - uri:
                prefix: /
            route:
              - destination:
                  host: {{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc
                  port:
                    number: 9006

    APIService: |
      ---
      apiVersion: apiregistration.k8s.io/v1
      kind: APIService
      metadata:
        name: v1alpha1.proxy.sgroups.io
        annotations:
          apiregistration.k8s.io/skip-openapi-validation: "true"
          cert-manager.io/inject-ca-from: "{{ $.Release.Namespace }}/{{ $.Release.Name }}-apisvcgateway"
      spec:
        group: proxy.sgroups.io
        version: v1alpha1
        groupPriorityMinimum: 16700
        versionPriority: 15
        service:
          namespace: {{ $.Release.Namespace }}
          name: {{ $.Release.Name }}-istio-apisvcgateway
          port: 443
