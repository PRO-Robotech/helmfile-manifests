{{- $mainDomain := .Values.global.domains.internal -}}
{{- $clusterFullName := .Values.global.clusterFullName -}}
{{- $hbfDomain  := printf "%s.%s.%s" .Release.Name .Release.Namespace $mainDomain }}

domain: {{ $mainDomain }}

appSpec:
  applications:
    server:
      containers:
        server:
          extraEnv:
            dbUser:     {{ .Values.global.sgroups.externalDB.dbUser }}
            dbPassword: {{ .Values.global.sgroups.externalDB.dbPassword }}
            dbUrl:      {{ .Values.global.sgroups.externalDB.dbUrl }}
            dbPort:     {{ .Values.global.sgroups.externalDB.dbPort }}
            dbName:     {{ .Values.global.sgroups.externalDB.dbName }}

      initContainers:
        migration:
          extraEnv:
            dbUser:     {{ .Values.global.sgroups.externalDB.dbUser }}
            dbPassword: {{ .Values.global.sgroups.externalDB.dbPassword }}
            dbUrl:      {{ .Values.global.sgroups.externalDB.dbUrl }}
            dbPort:     {{ .Values.global.sgroups.externalDB.dbPort }}
            dbName:     {{ .Values.global.sgroups.externalDB.dbName }}

    web:
      containers:
        web:
          extraEnv:
            HBF_API: https://{{ $hbfDomain }}/server

helm-inserter:
  templates:
    APIServiceCert: |
      ---
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: {{ $.Release.Name }}-apisvcgateway
        namespace: {{ $.Release.Namespace }}
      spec:
        commonName: {{ .Release.Name }}-istio-apisvcgateway
        dnsNames:
          - {{ .Release.Name }}-istio-apisvcgateway
          - {{ .Release.Name }}-istio-apisvcgateway.{{ $.Release.Namespace }}
          - {{ .Release.Name }}-istio-apisvcgateway.{{ $.Release.Namespace }}.svc
        issuerRef:
          group: cert-manager.io
          kind: Issuer
          name: {{ $.Release.Name }}
        usages:
          - server auth
        secretName: {{ $.Release.Name }}-apisvcgateway

    APIServiceGW: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: apisvc-gateway
        namespace: {{ $.Release.Namespace }}
      spec:
        selector:
          istio: {{ .Release.Name }}-istio-apisvcgateway
        servers:
          - port:
              number: 443
              name: https
              protocol: HTTPS
            hosts:
              - "*"
            tls:
              mode: SIMPLE
              credentialName: {{ $.Release.Name }}-apisvcgateway

    intDestinationRule: |
      ---
      apiVersion: networking.istio.io/v1
      kind: DestinationRule
      metadata:
        name: {{ $.Release.Name }}-sgroups
        namespace: {{ $.Release.Namespace }}
      spec:
        host: '{{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc'
        trafficPolicy:
          tls:
            insecureSkipVerify: true
            mode: SIMPLE

    SE: |
      ---
      apiVersion: networking.istio.io/v1
      kind: ServiceEntry
      metadata:
        name: sgroups-server-entry
        namespace: incloud-sgroups
      spec:
        hosts:
          - '{{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc'
        location: MESH_INTERNAL
        ports:
          - name: grpc
            number: 9006
            protocol: GRPC
        resolution: DNS

    APIServiceVS: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: apisvc-vsvc
        namespace: {{ $.Release.Namespace }}
      spec:
        hosts:
          - "*"
        gateways:
          - apisvc-gateway

        http:
        - match:
            - uri:
                prefix: /apis/proxy.sgroups.io/v1alpha1/hbf.v2.sgroups.SecGroupService
          name: hbf.v2.sgroups.SecGroupService
          route:
            - destination:
                host: {{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc
                port:
                  number: 9006

        - match:
            - uri:
                prefix: /apis/proxy.sgroups.io/v1alpha1/sgroups
          name: hbf.v2.sgroups
          route:
            - destination:
                host: {{ $.Release.Name }}-server.{{ $.Release.Namespace }}.svc
                port:
                  number: 9006

        - directResponse:
            body:
              string: |
                {
                  "kind": "APIResourceList",
                  "apiVersion": "v1",
                  "groupVersion": "proxy.sgroups.io/v1alpha1",
                  "resources": []
                }
            status: 200
          headers:
            response:
              set:
                Content-Type: application/json
          match:
            - method:
                exact: GET
              uri:
                exact: /apis/proxy.sgroups.io/v1alpha1

    APIService: |
      ---
      apiVersion: apiregistration.k8s.io/v1
      kind: APIService
      metadata:
        name: v1alpha1.proxy.sgroups.io
        annotations:
          apiregistration.k8s.io/skip-openapi-validation: "true"
          cert-manager.io/inject-ca-from: "{{ $.Release.Namespace }}/{{ $.Release.Name }}-apisvcgateway"
      spec:
        group: proxy.sgroups.io
        version: v1alpha1
        groupPriorityMinimum: 16700
        versionPriority: 15
        service:
          namespace: {{ $.Release.Namespace }}
          name: {{ $.Release.Name }}-istio-apisvcgateway
          port: 443
