{{- $internalDomain         := printf "%s.%s" .Release.Namespace .Values.global.domains.internal -}}
{{- $webAddr                := printf "incloud.%s" $internalDomain }}
{{- $apiAddr                := printf "api.%s" $internalDomain }}
{{- $mainClusterName        := .Values.global.clusterFullName -}}
{{- $values                 := printf "../../../../02-clusters/%s/%s.yaml" $mainClusterName $mainClusterName | readFile | fromYaml -}}

{{- $clustersList := list }}
{{- range $managedInstance := $values.mgmtClusters -}}
  {{- $managedCluster := $managedInstance.cluster -}}
  {{- $clusterValues  := printf "../../../../02-clusters/%s/%s.yaml" $managedCluster $managedCluster | readFile | fromYaml }}
  {{- $baseDomain     := printf "svc.%s.%s" ($managedCluster) ($.Values.global.domains.external) -}}
  {{- $extWebAddr    := printf "%s.%s" ($.Release.Namespace) ($baseDomain) -}}
  {{- $extApiAddr     := printf "api.%s.%s"  ($.Release.Namespace) ($baseDomain) -}}

  {{- $tmpDict := dict }}
  {{- $_ := set $tmpDict "api"             $extApiAddr }}
  {{- $_ := set $tmpDict "name"            $managedCluster }}
  {{- $_ := set $tmpDict "tenant"          $clusterValues.global.clusterEnv }}
  {{- $_ := set $tmpDict "description"     $managedCluster }}
  {{- $_ := set $tmpDict "externalDomain"  $extWebAddr }}
  {{- $_ := set $tmpDict "baseDomain"      $baseDomain }}

  {{ $clustersList = append $clustersList $tmpDict }}
{{- end }}

appSpec:
  applications:
    gatekeeper:
      replicas: 0
      containers:
        gatekeeper:
          extraArgs:
            discovery-url:    "https://dex.incloud-idp.{{ .Values.global.domains.internal }}"
            redirection-url:  "https://incloud.{{ .Values.global.istioNamespace}}.{{ .Values.global.domains.internal }}"

    web:
      containers:
        bff:
          extraEnv:
            KUBE_API_URL: "http://istio-ingressgateway.{{ .Values.global.istioNamespace}}.svc.{{ .Values.global.domains.internal }}"

helm-inserter:
  templates:
    {{- range $clustersList }}
    {{ .name }}DestinationRule: |
      ---
      apiVersion: networking.istio.io/v1
      kind: DestinationRule
      metadata:
        name: {{ $.Release.Name }}-{{ .name }}-dr
        namespace: {{ $.Release.Namespace }}
      spec:
        host: {{ .api }}
        trafficPolicy:
          tls:
            insecureSkipVerify: true
            mode: SIMPLE
            sni: {{ .api }}

    {{ .name }}DestinationRuleLocal: |
      ---
      apiVersion: networking.istio.io/v1
      kind: DestinationRule
      metadata:
        name: {{ $.Release.Name }}-{{ .name }}-dr-local
        namespace: {{ $.Release.Namespace }}
      spec:
        host: istio-ingressgateway.{{ .Values.global.istioNamespace}}.svc
        trafficPolicy:
          tls:
            insecureSkipVerify: true
            mode: SIMPLE

    {{ .name }}ExtDestinationRule: |
      ---
      apiVersion: networking.istio.io/v1
      kind: DestinationRule
      metadata:
        name: {{ $.Release.Name }}-{{ .name }}-external-dr
        namespace: {{ $.Release.Namespace }}
      spec:
        host: {{ .externalDomain }}
        trafficPolicy:
          tls:
            insecureSkipVerify: true
            mode: SIMPLE
            sni: {{ .externalDomain }}

    {{ .name }}ExtServiceEntry: |
      ---
      apiVersion: networking.istio.io/v1
      kind: ServiceEntry
      metadata:
        name: {{ $.Release.Name }}-{{ .name }}-external
        namespace: {{ $.Release.Namespace }}
      spec:
        hosts:
          - {{ .api }}
          - {{ .externalDomain }}
        location: MESH_EXTERNAL
        ports:
        - number: 443
          name: https
          protocol: HTTPS
        - number: 80
          name: http
          protocol: HTTP
        resolution: DNS
    {{- end }}

    intServiceEntry: |
      ---
      apiVersion: networking.istio.io/v1
      kind: ServiceEntry
      metadata:
        name: {{ $.Release.Name }}-internal
        namespace: {{ $.Release.Namespace }}
      spec:
        hosts:
          - istio-ingressgateway.{{ .Values.global.istioNamespace}}.svc
          - kubernetes.default.svc
        location: MESH_EXTERNAL
        ports:
          - number: 443
            name: https
            protocol: HTTPS
          - number: 80
            name: http
            protocol: HTTP
        resolution: DNS

    intDestinationRule: |
      ---
      apiVersion: networking.istio.io/v1
      kind: DestinationRule
      metadata:
        name: {{ $.Release.Name }}-kubernetes
        namespace: {{ $.Release.Namespace }}
      spec:
        host: 'kubernetes.default.svc'
        trafficPolicy:
          tls:
            insecureSkipVerify: true
            mode: SIMPLE

    incloudVirtualService: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: {{ .Release.Name }}-incloud-vsvc
        namespace: {{ .Release.Namespace }}
      spec:
        hosts:
        - test.com # {{ $webAddr }}
        gateways:
        - {{ .Values.global.istioNamespace}}/istio-ingressgateway
        http:
        - name: incloud
          match:
            - uri:
                prefix: /
          route:
          - destination:
              host: {{ $apiAddr }}
              port:
                number: 443

    apiVirtualService: |
      ---
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: {{ .Release.Name }}-api-vsvc
        namespace: {{ .Release.Namespace }}
      spec:
        hosts:
        - "*.svc.{{ .Values.global.istioNamespace}}.{{ .Values.global.domains.internal }}"
        - "*.svc.{{ .Release.Namespace}}.{{ .Values.global.domains.internal }}"
        gateways:
        - {{ .Values.global.istioNamespace}}/istio-ingressgateway
        http:

        - name: bff-ws
          match:
            - uri:
                prefix: /openapi-bff-ws/
          route:
            - destination:
                host: {{ .Release.Name }}-web
                port:
                  number: 64231

        - name: bff
          match:
            - uri:
                prefix: /openapi-bff/
          route:
            - destination:
                host: {{ .Release.Name }}-web
                port:
                  number: 64231


        - name: k8s
          match:
            - uri:
                prefix: /k8s/
          rewrite:
            uri: /
          route:
            - destination:
                host: kubernetes.default.svc
                port:
                  number: 443

        {{- range $clustersList }}
        - name: {{ .name }}
          match:
            - uri:
                prefix: /api/clusters/{{ .name }}/
          rewrite:
            uri: /
          route:
          - destination:
              port:
                number: 443
          {{- if eq (.name) ($mainClusterName) }}
              host: istio-ingressgateway.{{ .Values.global.istioNamespace}}.svc
          {{- else }}
              host: {{ .api }}
            headers:
              request:
                set:
                  Host: {{ .api }}
          {{- end }}
        {{- end }}

        - name: clusterlist
          match:
            - uri:
                prefix: /clusterlist
              method:
                exact: GET
            - uri:
                prefix: /api/clusters
              method:
                exact: GET
          headers:
            response:
              set:
                Content-Type: "application/json"
          directResponse:
            status: 200
            body:
              string: |
                {{ $clustersList | toJson }}

        - name: main
          match:
            - uri:
                prefix: /
          route:
            - destination: # return gatekeeper
                host: {{ .Release.Name }}-web
                port:
                  number: 8080
